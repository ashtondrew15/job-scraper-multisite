job-scraper-multisite/
├── job_scraper_app.py
├── scraping/
│   ├── __init__.py
│   ├── indeed_selenium.py
│   ├── remoteok_bs4.py
│   ├── careerjet_api.py
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
import time

def scrape_indeed(keyword, location, max_results=10):
    options = Options()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)

    url = f"https://www.indeed.com/jobs?q={keyword}&l={location}&remotejob=1"
    driver.get(url)
    time.sleep(2)

    jobs = []
    cards = driver.find_elements(By.CLASS_NAME, 'result')
    for card in cards[:max_results]:
        try:
            title = card.find_element(By.CLASS_NAME, 'jobTitle').text
            company = card.find_element(By.CLASS_NAME, 'companyName').text
            loc = card.find_element(By.CLASS_NAME, 'companyLocation').text
            link = card.find_element(By.TAG_NAME, 'a').get_attribute('href')
            jobs.append({
                "Job Title": title,
                "Company": company,
                "Location": loc,
                "Link": link
            })
        except Exception:
            continue

    driver.quit()
    return jobs
import requests
from bs4 import BeautifulSoup

def scrape_remoteok(keyword, location):
    url = "https://remoteok.com/remote-finance-jobs"
    headers = {'User-Agent': 'Mozilla/5.0'}
    res = requests.get(url, headers=headers)
    soup = BeautifulSoup(res.text, 'html.parser')

    jobs = []
    listings = soup.find_all("tr", class_="job")
    for row in listings:
        try:
            title = row.find("h2").text.strip()
            company = row.find("h3").text.strip()
            link = "https://remoteok.com" + row.get("data-href", "")
            jobs.append({
                "Job Title": title,
                "Company": company,
                "Location": "Remote",
                "Link": link
            })
        except Exception:
            continue

    return jobs
import requests

def scrape_careerjet(keyword, location):
    url = f"https://www.careerjet.com/search/jobs?s={keyword}&l={location}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)

    # Dummy parse (CareerJet blocks bots heavily - placeholder)
    return [{
        "Job Title": f"{keyword.title()} at CareerJet",
        "Company": "CareerJet Placeholder",
        "Location": location,
        "Link": url
    }]
